<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[关于数据交换]]></title>
      <url>http://yoursite.com/2017/03/22/2017-3-22-communicate/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Github+Hexo搭建个人博客及自定义]]></title>
      <url>http://yoursite.com/2016/09/19/blogLaunch/</url>
      <content type="html"><![CDATA[<h1 id="Github-Hexo搭建个人博客及自定义"><a href="#Github-Hexo搭建个人博客及自定义" class="headerlink" title="Github+Hexo搭建个人博客及自定义"></a>Github+Hexo搭建个人博客及自定义</h1><h2 id="Hexo-Get-Start"><a href="#Hexo-Get-Start" class="headerlink" title="Hexo Get Start"></a>Hexo Get Start</h2><h3 id="安装和初始化"><a href="#安装和初始化" class="headerlink" title="安装和初始化"></a>安装和初始化</h3><ol>
<li><p>命令行里执行:  </p>
<figure class="highlight plain"><figcaption><span>npm install -g hexo```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">2. 初始化博客(若不设置folder，默认在当前文件夹建立网站):  </div><div class="line">   ```$ hexo init [folder]</div></pre></td></tr></table></figure>
<p>会自动生成source,thems,_config.yml。</p>
</li>
<li><p>按照提示运行 <code>$ npm install</code> 。 会观察到增加了node_modules目录。</p>
</li>
</ol>
<h3 id="The-First-article"><a href="#The-First-article" class="headerlink" title="The First article"></a>The First article</h3><ol>
<li><p>我们来创建博客的第一篇文章。  </p>
<figure class="highlight plain"><figcaption><span>hexo new [post|page|draft] "hello-world"```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">   该命令会在`[folder]\source\_posts`下自动创建一个&quot;hello-world.md&quot;文件。</div><div class="line"></div><div class="line">2. 发表草稿：`$ hexo publish &lt;filename&gt;` (草稿会存在`source\_drafts`文件夹中，该命令会将草稿移入`source\_posts`中。)</div><div class="line"></div><div class="line">3. 生成静态网页: `$hexo generate`。 生成的静态文件位于public文件夹下。  </div><div class="line"></div><div class="line">4. 启动本地server: `$ hexo server`。 启动后，访问 [http://localhost:4000/](http://localhost:4000/)(4000为默认端口)可预览博客效果。   </div><div class="line">   停止server: &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt;   (*注 hexo3中server模块独立出来了，要单独安装`$ npm install hexo-server --save`*)</div><div class="line"></div><div class="line">   *注： 若发现站点未发生改变，则可能需 `$ hexo clean` 清除生成的静态文件等，再重新generate* 。</div><div class="line">### 部署到GitHub</div><div class="line">*注:* *需要先在github上创建个人的github page。*</div><div class="line"></div><div class="line">1. 安装hexo-deployer插件: `$ npm install hexo-deployer-git`  </div><div class="line"></div><div class="line">2. 修改站点配置文件`_config.yml`： 找到`deploy`,将其属性修改为：</div><div class="line">   ```type: git</div><div class="line">      repository: https://github.com/[username]/[username].github.io.git</div><div class="line">      branch: master```  </div><div class="line">      *注: [username]为自己在github的用户名。*</div></pre></td></tr></table></figure>
</li>
<li><p>运行 <code>hexo deploy</code>  </p>
</li>
</ol>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>参考：<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo文档</a></p>
<h2 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h2><p>我使用的是<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">NexT主题</a></p>
<h3 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h3><p>主题安装后，会出现在<code>themes</code>目录下。主题配置文件为<code>_config.yml</code>。可参考注释和官网进行配置。</p>
<h3 id="第三方服务集成"><a href="#第三方服务集成" class="headerlink" title="第三方服务集成"></a>第三方服务集成</h3><p>我集成了多说，google-analytics，不蒜子，sitemap。配置第三方库方法可以参考<a href="http://zhiho.github.io/2015/09/29/hexo-next/" target="_blank" rel="external">这篇博客</a>。</p>
<h2 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h2><h3 id="目录结构与渲染原理"><a href="#目录结构与渲染原理" class="headerlink" title="目录结构与渲染原理"></a>目录结构与渲染原理</h3><ul>
<li>站点的<code>scaffolds</code>目录下存着几种layout的模板，默认的layout有page,post,draft,可自定义。</li>
<li>站点的<code>public</code>下..</li>
<li>主题的<code>source</code>下..</li>
<li>主题的<code>layout</code>下..</li>
<li>主题的<code>scripts</code>下..</li>
</ul>
<p>在运行hexo g等时，会…</p>
<p> 基于上述分析，通过修改站点和主题的配置文件是在已有的样式和组件上进行选择。如果我们要自定义且覆盖其默认样式，可以修改css或js源码，但为了不破坏、易于管理、可组合等思想，我们可以在<code>\themes\next\source\js\src</code>中定义自己的js文件，在layout的<code>_layout.swig</code>里引用。在<code>\themes\next\source\css\_custom</code>里定义样式表，支持stylus语法，也可用原生CSS。（从<code>main.styl</code>里可看到NexT主题是默认引用<code>custom.styl</code>的）。</p>
<p>当想要修改某部分样式时，可以在浏览器中查看元素，然后在自定义文件中修改。</p>
<h3 id="What-I-have-done"><a href="#What-I-have-done" class="headerlink" title="What I have done"></a>What I have done</h3><p>这里我简单记录下该博客在样式上做的改变，也可给大家一个参考</p>
<ul>
<li><p>昼/夜两套样式    </p>
<p>这个单纯因为自己喜欢昼与夜，日与月这样的概念，又爱折腾视觉效果。:-)  </p>
</li>
<li><p>侧边栏</p>
<p>觉得之前的样式不够简约，展开收起的方式也有些奇怪，所以稍微修改了下。</p>
</li>
<li><p>背景</p>
</li>
</ul>
<h2 id="好啦"><a href="#好啦" class="headerlink" title="好啦"></a>好啦</h2><p>这样，就搞定了自己喜欢的样式，拥有了独一无二的闪耀着自己的小趣味的Blog。接下来就是好好写作的阶段啦，毕竟皮表再华丽也只是皮表，博客灵魂还是内容吧。(发布文章流程：)</p>
<p><em>未完待续…</em></p>
<h3 id=""><a href="#" class="headerlink" title=" "></a> </h3>]]></content>
      
        
        <tags>
            
            <tag> life </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
